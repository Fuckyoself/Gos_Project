{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Diplom.ipynb\"","provenance":[{"file_id":"1aboid8BlFhZMePH4Ii0fHaNy8R1VsEhT","timestamp":1638595546067}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import auth\n","auth.authenticate_user()\n","\n","import gspread\n","from google.auth import default\n","creds, _ = default()\n","\n","gc = gspread.authorize(creds)\n","\n","\n","\n","worksheet = gc.open('Б-04-01-М (2 2021)').get_worksheet(5)\n","\n","\n","# get_range_values gives a list of rows.\n","rows = worksheet.get('A7:H24')\n","\n","# Convert to a DataFrame and render.\n","import pandas as pd\n","df=pd.DataFrame.from_records(rows)\n","df.index=df[0]\n","del df[0]\n","df.index.name = worksheet.acell('A2').value\n","df = df.rename(columns= {1: 'Число предприятий', \n","                         2: 'Объём пр. за пред. месяц', \n","                         3: 'Объём пр. за отчет. месяц', \n","                         4: 'Объём пр. за отчёт. период',\n","                         5: 'ИПП отчет./пред. году',\n","                         6: 'ИПП отчет./пред. месяц',\n","                         7: 'ИПП отчет в пред. году'})\n","df"],"metadata":{"id":"bW11RjImGbkM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","from google.colab import auth\n","auth.authenticate_user()\n","\n","import gspread\n","from google.auth import default\n","creds, _ = default()\n","\n","gc = gspread.authorize(creds)\n","\n","worksheet = gc.open('Б-04-01-М (1 2021)').get_worksheet(5)\n","nam = worksheet.get('B4:H6')\n","df_p = pd.DataFrame.from_records(nam)\n","df_p = df_p.rename(columns={0: 'B', 1: 'C', 2: 'D', 3: 'F', 4: 'G', 5: 'H' })\n","df_p = df_p.T\n","display(df_p)\n","\n","print('Выберите какие данные вы хотите получиться (Укажите букву строки на латинице)')\n","coco=input().upper()\n","\n","a = list(range(1, 13))\n","print('укажите месяц начала отсчёта')\n","i = int(input()) - 1\n","print('укажите месяц конца отсчёта')\n","b = int(input())\n","df=pd.DataFrame()\n","\n","\n","\n","\n","while i < b:\n","  worksheet = gc.open(f'Б-04-01-М ({a[i]} 2021)').get_worksheet(5)\n","  rows = worksheet.get(f'{coco}7:{coco}24')\n","  df1=pd.DataFrame.from_records(rows)\n","  df=pd.concat([df, df1], axis=1)\n","#  df = df.rename(columns={'0': f'a[i]'})\n","  i = i + 1 \n","\n","rows = worksheet.get('A7:A24')\n","df_i=pd.DataFrame.from_records(rows)\n","df.insert(0, \"Город\", df_i[0], True)\n","# df.index=df_i[0]\n","df.index.name = worksheet.acell(f'{coco}4').value + worksheet.acell(f'{coco}5').value + worksheet.acell(f'{coco}6').value\n","df\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"cMlLkCUTnlPS","executionInfo":{"status":"ok","timestamp":1654316089315,"user_tz":-360,"elapsed":50242,"user":{"displayName":"Аблайхан Абибуллаев","userId":"17949282824818182752"}},"outputId":"7c7ba7b5-f9dd-4c8b-b3be-cec9820b3f6e"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["                                                   0  \\\n","B  Кәсіп-\\nорындар\\nжәне\\nөндірістер\\nсаны\\nЧисло...   \n","C  Өнеркәсіптік өнім (тауар, қызмет) өндірісінің ...   \n","D                                                      \n","F                                                      \n","G  Өнеркәсіптік өндіріс индекстері, %-бен\\nИндекс...   \n","H                                               None   \n","6                                               None   \n","\n","                                                   1  \\\n","B                                                      \n","C                      алдыңғы ай\\nпредыдущий\\nмесяц   \n","D                         есепті ай\\nотчетный\\nмесяц   \n","F                     есепті кезең\\nотчетный\\nпериод   \n","G                        есепті ай\\nотчетный месяц к   \n","H                                                      \n","6  есепті кезең\\nөткен жылға\\nотчетный\\nпериод к ...   \n","\n","                                                   2  \n","B                                                     \n","C                                                     \n","D                                                     \n","F                                                     \n","G                 алдыңғы\\nайға\\nпредыдущему\\nмесяцу  \n","H  өткен жылғы\\nтиісті айға\\nсоответствующему мес...  \n","6                                               None  "],"text/html":["\n","  <div id=\"df-65cea2ae-247d-4cce-b68b-ff96c79551a9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>B</th>\n","      <td>Кәсіп-\\nорындар\\nжәне\\nөндірістер\\nсаны\\nЧисло...</td>\n","      <td></td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>Өнеркәсіптік өнім (тауар, қызмет) өндірісінің ...</td>\n","      <td>алдыңғы ай\\nпредыдущий\\nмесяц</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>D</th>\n","      <td></td>\n","      <td>есепті ай\\nотчетный\\nмесяц</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td></td>\n","      <td>есепті кезең\\nотчетный\\nпериод</td>\n","      <td></td>\n","    </tr>\n","    <tr>\n","      <th>G</th>\n","      <td>Өнеркәсіптік өндіріс индекстері, %-бен\\nИндекс...</td>\n","      <td>есепті ай\\nотчетный месяц к</td>\n","      <td>алдыңғы\\nайға\\nпредыдущему\\nмесяцу</td>\n","    </tr>\n","    <tr>\n","      <th>H</th>\n","      <td>None</td>\n","      <td></td>\n","      <td>өткен жылғы\\nтиісті айға\\nсоответствующему мес...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>None</td>\n","      <td>есепті кезең\\nөткен жылға\\nотчетный\\nпериод к ...</td>\n","      <td>None</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-65cea2ae-247d-4cce-b68b-ff96c79551a9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-65cea2ae-247d-4cce-b68b-ff96c79551a9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-65cea2ae-247d-4cce-b68b-ff96c79551a9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"name":"stdout","output_type":"stream","text":["Выберите какие данные вы хотите получиться (Укажите букву строки на латинице)\n","H\n","укажите месяц начала отсчёта\n","3\n","укажите месяц конца отсчёта\n","7\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                                     Город  \\\n","есепті кезең\\nөткен жылға\\nотчетный\\nпериод к \\...                           \n","0                                                   Қазақстан Республикасы   \n","1                                                                   Ақмола   \n","2                                                                   Ақтөбе   \n","3                                                                   Алматы   \n","4                                                                   Атырау   \n","5                                                          Батыс Қазақстан   \n","6                                                                   Жамбыл   \n","7                                                                Қарағанды   \n","8                                                                 Қостанай   \n","9                                                                Қызылорда   \n","10                                                               Маңғыстау   \n","11                                                                Павлодар   \n","12                                                     Солтүстік Қазақстан   \n","13                                                              Түркістан    \n","14                                                        Шығыс  Қазақстан   \n","15                                                       Нұр-Сұлтан қаласы   \n","16                                                           Алматы қаласы   \n","17                                                          Шымкент қаласы   \n","\n","                                                        0      0      0  \\\n","есепті кезең\\nөткен жылға\\nотчетный\\nпериод к \\...                        \n","0                                                   100,1  100,8  101,4   \n","1                                                   109,1  108,1  107,1   \n","2                                                   107,3  107,7  108,1   \n","3                                                   114,8  115,3  115,6   \n","4                                                    85,3   85,8   86,8   \n","5                                                    95,3   93,1   94,1   \n","6                                                   107,3  107,1  106,7   \n","7                                                    99,1  100,8  101,1   \n","8                                                   108,6  109,5  109,7   \n","9                                                    99,4   99,7  100,3   \n","10                                                   92,6   92,8   93,7   \n","11                                                  103,7  104,2  105,1   \n","12                                                  110,2  110,3  109,3   \n","13                                                   97,7   98,2  100,9   \n","14                                                  108,1  106,7  106,9   \n","15                                                  125,3  120,3  115,6   \n","16                                                  118,3  119,5  119,7   \n","17                                                  112,7  113,5  110,1   \n","\n","                                                        0      0  \n","есепті кезең\\nөткен жылға\\nотчетный\\nпериод к \\...                \n","0                                                   101,5  102,5  \n","1                                                   107,5  108,0  \n","2                                                   108,2  106,8  \n","3                                                   115,8  114,8  \n","4                                                    89,0   93,1  \n","5                                                    93,6   93,7  \n","6                                                   107,3  107,7  \n","7                                                   101,4  101,6  \n","8                                                   109,8  110,2  \n","9                                                   100,5  100,6  \n","10                                                   94,1   95,0  \n","11                                                  105,5  105,7  \n","12                                                  108,5  107,2  \n","13                                                  101,5  101,9  \n","14                                                  107,1  104,7  \n","15                                                  115,7  113,6  \n","16                                                  119,8  122,0  \n","17                                                  107,2  106,2  "],"text/html":["\n","  <div id=\"df-4ff79a35-9c5a-4bf0-a63d-c44f6f249d9c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Город</th>\n","      <th>0</th>\n","      <th>0</th>\n","      <th>0</th>\n","      <th>0</th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>есепті кезең\n","өткен жылға\n","отчетный\n","период к \n","прошлому году</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Қазақстан Республикасы</td>\n","      <td>100,1</td>\n","      <td>100,8</td>\n","      <td>101,4</td>\n","      <td>101,5</td>\n","      <td>102,5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Ақмола</td>\n","      <td>109,1</td>\n","      <td>108,1</td>\n","      <td>107,1</td>\n","      <td>107,5</td>\n","      <td>108,0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ақтөбе</td>\n","      <td>107,3</td>\n","      <td>107,7</td>\n","      <td>108,1</td>\n","      <td>108,2</td>\n","      <td>106,8</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Алматы</td>\n","      <td>114,8</td>\n","      <td>115,3</td>\n","      <td>115,6</td>\n","      <td>115,8</td>\n","      <td>114,8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Атырау</td>\n","      <td>85,3</td>\n","      <td>85,8</td>\n","      <td>86,8</td>\n","      <td>89,0</td>\n","      <td>93,1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Батыс Қазақстан</td>\n","      <td>95,3</td>\n","      <td>93,1</td>\n","      <td>94,1</td>\n","      <td>93,6</td>\n","      <td>93,7</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Жамбыл</td>\n","      <td>107,3</td>\n","      <td>107,1</td>\n","      <td>106,7</td>\n","      <td>107,3</td>\n","      <td>107,7</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Қарағанды</td>\n","      <td>99,1</td>\n","      <td>100,8</td>\n","      <td>101,1</td>\n","      <td>101,4</td>\n","      <td>101,6</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Қостанай</td>\n","      <td>108,6</td>\n","      <td>109,5</td>\n","      <td>109,7</td>\n","      <td>109,8</td>\n","      <td>110,2</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Қызылорда</td>\n","      <td>99,4</td>\n","      <td>99,7</td>\n","      <td>100,3</td>\n","      <td>100,5</td>\n","      <td>100,6</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Маңғыстау</td>\n","      <td>92,6</td>\n","      <td>92,8</td>\n","      <td>93,7</td>\n","      <td>94,1</td>\n","      <td>95,0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Павлодар</td>\n","      <td>103,7</td>\n","      <td>104,2</td>\n","      <td>105,1</td>\n","      <td>105,5</td>\n","      <td>105,7</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Солтүстік Қазақстан</td>\n","      <td>110,2</td>\n","      <td>110,3</td>\n","      <td>109,3</td>\n","      <td>108,5</td>\n","      <td>107,2</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Түркістан</td>\n","      <td>97,7</td>\n","      <td>98,2</td>\n","      <td>100,9</td>\n","      <td>101,5</td>\n","      <td>101,9</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Шығыс  Қазақстан</td>\n","      <td>108,1</td>\n","      <td>106,7</td>\n","      <td>106,9</td>\n","      <td>107,1</td>\n","      <td>104,7</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Нұр-Сұлтан қаласы</td>\n","      <td>125,3</td>\n","      <td>120,3</td>\n","      <td>115,6</td>\n","      <td>115,7</td>\n","      <td>113,6</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Алматы қаласы</td>\n","      <td>118,3</td>\n","      <td>119,5</td>\n","      <td>119,7</td>\n","      <td>119,8</td>\n","      <td>122,0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Шымкент қаласы</td>\n","      <td>112,7</td>\n","      <td>113,5</td>\n","      <td>110,1</td>\n","      <td>107,2</td>\n","      <td>106,2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ff79a35-9c5a-4bf0-a63d-c44f6f249d9c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4ff79a35-9c5a-4bf0-a63d-c44f6f249d9c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4ff79a35-9c5a-4bf0-a63d-c44f6f249d9c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","print(df['Город'], \" укажите номер города\")\n","\n","d=int(input())\n","\n","\n","gr=df.loc[d]\n","gr.index=[gr[0]]\n","gr.drop(['Город'], axis='columns')\n","gr=gr.T\n","gr\n","display(gr)\n","\n","\"\"\"\n","\n","df = df.cumsum()\n","plt.figure();\n","df.plot.bar(x='Город', y=[1, 2], rot=0);\n","\n","lt.pie(df[\"Price\"], labels=df[\"Город\"])\n","plt.show()\n","\n","\n","\"\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":745},"id":"WvKE3XhC_e-q","executionInfo":{"status":"error","timestamp":1654317774088,"user_tz":-360,"elapsed":2715,"user":{"displayName":"Аблайхан Абибуллаев","userId":"17949282824818182752"}},"outputId":"59397b12-9b09-4eb5-84ac-adf0d2a08656"},"execution_count":13,"outputs":[{"name":"stdout","output_type":"stream","text":["есепті кезең\\nөткен жылға\\nотчетный\\nпериод к \\nпрошлому году\n","0     Қазақстан Республикасы\n","1                     Ақмола\n","2                     Ақтөбе\n","3                     Алматы\n","4                     Атырау\n","5            Батыс Қазақстан\n","6                     Жамбыл\n","7                  Қарағанды\n","8                   Қостанай\n","9                  Қызылорда\n","10                 Маңғыстау\n","11                  Павлодар\n","12       Солтүстік Қазақстан\n","13                Түркістан \n","14          Шығыс  Қазақстан\n","15         Нұр-Сұлтан қаласы\n","16             Алматы қаласы\n","17            Шымкент қаласы\n","Name: Город, dtype: object  укажите номер города\n","3\n"]},{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-759540324678>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mgr\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0md\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mgr\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Город'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'columns'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mgr\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mT\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__setattr__\u001b[0;34m(self, name, value)\u001b[0m\n\u001b[1;32m   5498\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5499\u001b[0m             \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5500\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5501\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5502\u001b[0m             \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/properties.pyx\u001b[0m in \u001b[0;36mpandas._libs.properties.AxisProperty.__set__\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_set_axis\u001b[0;34m(self, axis, labels, fastpath)\u001b[0m\n\u001b[1;32m    557\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mfastpath\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    558\u001b[0m             \u001b[0;31m# The ensure_index call above ensures we have an Index object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 559\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    560\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    561\u001b[0m     \u001b[0;31m# ndarray compatibility\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mset_axis\u001b[0;34m(self, axis, new_labels)\u001b[0m\n\u001b[1;32m    214\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mset_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_labels\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIndex\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m         \u001b[0;31m# Caller is responsible for ensuring we have an Index object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 216\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_set_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_labels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    217\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_labels\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/internals/base.py\u001b[0m in \u001b[0;36m_validate_set_axis\u001b[0;34m(self, axis, new_labels)\u001b[0m\n\u001b[1;32m     56\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mnew_len\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mold_len\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m             raise ValueError(\n\u001b[0;32m---> 58\u001b[0;31m                 \u001b[0;34mf\"Length mismatch: Expected axis has {old_len} elements, new \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m                 \u001b[0;34mf\"values have {new_len} elements\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m             )\n","\u001b[0;31mValueError\u001b[0m: Length mismatch: Expected axis has 6 elements, new values have 5 elements"]}]}]}